---
# tasks file for fisheye

- name: create system user
  user:
    name={{ fisheye_user }}
    password={{ fisheye_pass }}
    home={{ fisheye_home }}
    system=yes
    shell=/bin/bash
  notify: restart fisheye
  tags: fisheye

- name: prepare files
  file:
    path={{ item.path }}
    owner={{ item.owner }}
    group={{ item.group }}
    mode={{ item.mode }}
    state={{ item.state }}
  with_items:
    - { path: "{{ fisheye_catalina }}", owner: "{{ fisheye_user }}", group: "{{ fisheye_user }}", mode: '0755', state: 'directory' }
  notify: restart fisheye
  tags: fisheye

- name: download package
  get_url:
    url={{ fisheye_url }}
    dest={{ fisheye_archive }}
    sha256sum={{ fisheye_sha256 }}
  notify: restart fisheye
  tags: fisheye

- name: unarchive package
  shell: TMP_DIR=`mktemp -d`; unzip {{ fisheye_archive }} -x -d $TMP_DIR; rsync -av $TMP_DIR/*/ {{ fisheye_catalina }}; chown -Rf {{ fisheye_user }}:{{ fisheye_user }} {{ fisheye_catalina }}
  args:
    creates: "{{ fisheye_catalina }}/bin/start.sh"
  notify: restart fisheye
  tags: fisheye

- name: copy templates
  template:
    src="{{ item.template }}.j2"
    dest="/{{ item.template }}"
    owner={{ item.owner }}
    group={{ item.group }}
    mode={{ item.mode }}
  with_items:
    - { template: 'etc/init.d/fisheye', owner: 'root', group: 'root', mode: '0755' }
    - { template: 'usr/share/fisheye/bin/fisheyectl.sh', owner: "{{ fisheye_user }}", group: "{{ fisheye_user }}", mode: '0755' }
    - { template: 'usr/share/fisheye/config.xml', owner: "{{ fisheye_user }}", group: "{{ fisheye_user }}", mode: '0644' }
  notify: restart fisheye
  tags: fisheye

- name: enable service
  service: name=fisheye enabled=yes
  notify: restart fisheye
  tags: fisheye
